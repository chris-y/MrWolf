Fade
Concept document

The Amiga Inc controlled future will mean that all content-orientated devices should be running a
version of AmigaDE, and be connected via a wireless network.  This will enable interesting things,
including playing mpeg video streams from a server directly on your TV.  A slightly less
interesting - but important - possibility is that of keeping all the devices time synchronised.
From synchronising your AmigaOS/DE Home Server with a server on the Internet, to keeping your PDA
in time with a TV or radio broadcast time signal, fade will make this a possibility.

Fade is a fully scalable network time client for AmigaDE.  In its basic form, it can be a simple
text-based client, only able to access certain types of servers.  However, it is able to scale up
to a fully GUI-based and feature rich client and server.

This is achieved by making use of the Elate tools model as follows:

User interfaces      Protocol Tools      Other Tools

nettime (cli)        daytime
                     timeudp
fade (gui)           timetcp             fadeprefs
                     sntp
faded (server)       ntp                 servcfg

For example, a PDA user may want to synchronise the PDA's clock with a desktop machine.  The PDA
will be fairly limited in resources, so the only tools required will be 'nettime' and one of the
protocol tools.

A desktop user may want to synchronise their machine with a server on the Internet.  This user will
require the 'fade', 'fadeprefs' and one or more of the protocol tools (it is suggested to install
all of these).  They may also require minimal server functionality to synchronise a PDA, however
the time protocol implemented in many TCP/IP stacks is usually adequate for this purpose.

The fadeprefs tool will not be loaded into memory until it is required.  This makes the GUI based
interface very memory efficient.  In addition, the CLI-based nettime tool will be able to
synchronise regularly with a simple script, making this ideal for very space-limited devices.

A server user will likely want to synchronise their clock with a NTP server on the Internet, and
broadcast this time out to other client machines.  Again, this can support as many or as few of the
protocol tools as required (the server tools will be implemented seperately to the client tools).
The servcfg tool will not be loaded into memory unless it is required.

In summary, fade is planned to "fade" from 15 different tools - of which 14 may be required in a
server environment - down to two individual tools for devices with limited resources.  It will be
implemented to be resource efficient on all devices, and coded directly in VP assembly for speed
and accuracy.


(c) 2001 Unsatisfactory Software
